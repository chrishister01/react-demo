{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-field/search-field.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","card","name","CardList","cards","map","id","SearchField","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredCards","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iTAIaA,EAAO,SAAAC,GAAK,OACvB,qBAAKC,UAAU,YAAf,SACE,6BAAKD,EAAME,KAAKC,UCDPC,G,MAAW,SAAAJ,GAAK,OAC3B,qBAAKC,UAAU,sBAAf,SACGD,EAAMK,MAAMC,KAAI,SAAAJ,GAAI,OACnB,cAAC,EAAD,CAAoBA,KAAMA,GAAfA,EAAKK,WCNTC,EAAc,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,aAAf,OACzB,uBACEC,KAAK,SACLF,YAAaA,EACbG,SAAUF,KCoCCG,E,kDApCb,aAAe,IAAD,8BACZ,gBAaFH,aAAe,SAAAI,GACb,EAAKC,SAAS,CAACC,YAAaF,EAAEG,OAAOC,SAbrC,EAAKC,MAAQ,CACXd,MAAO,GACPW,YAAa,IAJH,E,qDAQd,WAAqB,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAACV,MAAOmB,S,oBAOzC,WAAU,IAAD,EACsBC,KAAKN,MAA3Bd,EADA,EACAA,MAAOW,EADP,EACOA,YACRU,EAAgBrB,EAAMsB,QAAO,SAAAzB,GAAI,OACrCA,EAAKC,KAAKyB,cAAcC,SAASb,EAAYY,kBAG/C,OACE,sBAAK3B,UAAU,MAAf,UACE,cAAC,EAAD,CACEQ,YAAY,oBACZC,aAAce,KAAKf,eAErB,cAAC,EAAD,CAAUL,MAAOqB,W,GAhCPI,aCQHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.de2ffd51.chunk.js","sourcesContent":["import React from 'react';\n\nimport './card.styles.css'\n\nexport const Card = props => (\n  <div className='card-item'>\n    <h1>{props.card.name}</h1>\n  </div>\n);","import React from 'react';\nimport { Card } from '../card/card.component'\n\nimport './card-list.styles.css';\n\nexport const CardList = props => (\n  <div className='card-list-container'>\n    {props.cards.map(card => (\n      <Card key={card.id} card={card} />\n    ))}    \n  </div>\n);","import React from 'react'\n\nexport const SearchField = ({placeholder, handleChange}) => (\n  <input \n    type='search' \n    placeholder={placeholder} \n    onChange={handleChange} \n  />\n);","import React, { Component } from 'react';\nimport './App.css';\nimport { CardList } from './components/card-list/card-list.component'\nimport { SearchField } from './components/search-field/search-field.component'\nclass App extends Component {\n  \n  constructor() {\n    super();\n    this.state = {\n      cards: [],\n      searchField: ''\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response => response.json())\n      .then(users => this.setState({cards: users}));\n  }\n\n  handleChange = e => {\n    this.setState({searchField: e.target.value})\n  }\n\n  render() {\n    const {cards, searchField} = this.state;\n    const filteredCards = cards.filter(card => \n      card.name.toLowerCase().includes(searchField.toLowerCase())\n    )\n\n    return (\n      <div className=\"App\">\n        <SearchField\n          placeholder='Search for a card'\n          handleChange={this.handleChange}\n        />\n        <CardList cards={filteredCards} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}